===========================
How to Use matrix_divided.py
===========================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided(...)`` returns a new matrix where each element is divided by ``div`` and rounded to 2 decimal places.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[0, 0, 0], [0, 0, 0]]
    >>> matrix_divided(matrix, 6.5)
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

::

    >>> matrix = [[10, 20], [30, 40]]
    >>> matrix_divided(matrix, 10)
    [[1.0, 2.0], [3.0, 4.0]]

::

    >>> matrix = [[1.5, 2.5], [3.5, 4.5]]
    >>> matrix_divided(matrix, 0.5)
    [[3.0, 5.0], [7.0, 9.0]]

::

# Test for div as infinity
::

    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

# Test for missing one argument
::

    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

# Test for missing both arguments
::

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


::

    >>> matrix = [[1, 2], [3, 4], [5, 6]]
    >>> matrix_divided(matrix, 1)
    [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]

Large Numbers
=============

``matrix_divided()`` handles large floating-point numbers correctly:

::

    >>> matrix = [[1000000000.0, 2000000000.0], [3000000000.0, 4000000000.0]]
    >>> matrix_divided(matrix, 1000000000.0)
    [[1.0, 2.0], [3.0, 4.0]]

Error Cases
===========

Divisor Checks
==============

``matrix_divided()`` expects that ``div`` is a number and is not zero. If ``div`` is not a number or zero, a TypeError or ZeroDivisionError is raised:

::

    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, 'a')
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Matrix Validation
=================

``matrix_divided()`` expects that ``matrix`` is a list of lists of integers or floats, with all rows having the same size. If ``matrix`` does not meet these requirements, a TypeError is raised:

::

    >>> matrix = [[1, 2], [3, '4']]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix = [[1, 2], [3]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

::

    >>> matrix = [1, 2, 3]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

::

    >>> matrix = [[1, 2], [3, 4], [5]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size
